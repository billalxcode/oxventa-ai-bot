from telebot import TeleBot
from telebot.types import Message
from src.core.types import AgentRuntimeAbstract
from typing import Optional, List, Callable

class TelegramAbstract:
    def __init__(self, runtime: AgentRuntimeAbstract):
        self.bot: TeleBot = None
        self.runtime: AgentRuntimeAbstract

    def start(self): ...
    def stop(self): ...
    def init(self): ...
    def ensure_connection(self): ...
    def build_message_handler(
            self,
            commands: Optional[List[str]] = None,
            regexp: Optional[str] = None,
            func: Optional[Callable] = None,
            content_types: Optional[List[str]] = None,
            chat_types: Optional[List[str]] = None,
            **kwargs): ...
    def register_handlers(self): ...
    def reply_to(self, message: Message, text: str): ...
    def handle_new_message(self, message: Message): ...
    def handle_editted_message(self): ...
    def handle_start_message(self, message: Message): ...