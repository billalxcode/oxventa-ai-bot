from web3 import Web3
from web3.types import TxParams
from typing import Union
from typing import Literal
from eth_typing.encoding import HexStr
from eth_typing.evm import Address
from eth_typing.evm import ChecksumAddress

class ChainEvmAbstract:
    def __init__(self):
        self.w3: Web3
    
    def get_chain_id(self): ...
    def get_gas_price(self): ...
    def generate_gas_price(self): ...
    def estimate_gas(self): ...
    def get_nonce(self, address: Union[Address, ChecksumAddress]): ...
    def get_balance(self, address: Union[Address, ChecksumAddress]): ...
    def send_transaction(self, tx_params: TxParams): ...
    def send_raw_transaction(self, transaction_hash: Union[HexStr, bytes]): ...
    
class ChainsManagerAbstract:
    def __init__(self):
        self.chains = []

    def register_chain(self): ...
    def get_chain(
            self,
            name: Literal["ethereum", "bsc", "base"]): ...